{"ast":null,"code":"const initialState = {\n  items: {},\n  totalPrice: 0,\n  totalCount: 0\n};\n\nconst getTotalPrice = arr => arr.reduce((sum, obj) => obj.price + sum, 0);\n\nconst cart = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'PLUS_CART_ITEM') {\n    const newItems = [...state.items[action.payload].items, state.items[action.payload].items[0]];\n    return { ...state,\n      items: {\n        [action.payload]: {\n          items: newItems,\n          totalPrice: getTotalPrice(newItems)\n        }\n      }\n    };\n  }\n\n  if (action.type === 'REMOVE_1PIZZA') {\n    const newItems = { ...state.items\n    };\n    const currentTotalPrice = newItems[action.payload].totalPrice;\n    const currentTotalCount = newItems[action.payload].items.length;\n    console.log('---', currentTotalCount);\n    delete newItems[action.payload];\n    return { ...state,\n      items: newItems,\n      totalPrice: state.totalPrice - currentTotalPrice,\n      totalCount: state.totalCount - currentTotalCount\n    };\n  }\n\n  if (action.type === 'ADD_PIZZA_CART') {\n    const currenPizzaItems = !state.items[action.payload.id] ? [action.payload] : [...state.items[action.payload.id].items, action.payload];\n    const newItems = { ...state.items,\n      [action.payload.id]: {\n        items: currenPizzaItems,\n        totalPrice: getTotalPrice(currenPizzaItems)\n      }\n    };\n    const items = Object.values(newItems).map(obj => obj.items);\n    const allPizzas = [].concat.apply([], items);\n    const totalPrice = getTotalPrice(allPizzas);\n    return { ...state,\n      items: newItems,\n      totalCount: allPizzas.length,\n      totalPrice: totalPrice\n    };\n  } else if (action.type === 'CLEAR_CART') {\n    return {\n      totalCount: 0,\n      totalPrice: 0,\n      items: {}\n    };\n  }\n\n  return state;\n};\n\nexport default cart;","map":{"version":3,"sources":["C:/programs/react/React-pizza/my-app/src/redux/reducers/cart.js"],"names":["initialState","items","totalPrice","totalCount","getTotalPrice","arr","reduce","sum","obj","price","cart","state","action","type","newItems","payload","currentTotalPrice","currentTotalCount","length","console","log","currenPizzaItems","id","Object","values","map","allPizzas","concat","apply"],"mappings":"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","sourcesContent":["const initialState = {\r\n    items: {},\r\n    totalPrice: 0,\r\n    totalCount: 0\r\n}\r\n\r\nconst getTotalPrice = arr => arr.reduce((sum, obj) => obj.price + sum, 0   )\r\n\r\n const cart = (state = initialState, action) => {\r\n\r\n    if (action.type === 'PLUS_CART_ITEM') {\r\n\r\n        const newItems = [\r\n            ...state.items[action.payload].items,\r\n            state.items[action.payload].items[0],\r\n        ]\r\n        return {\r\n            ...state,\r\n            items: {\r\n                [action.payload]: {\r\n                    items: newItems,\r\n                    totalPrice: getTotalPrice(newItems)\r\n                }\r\n                \r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    if (action.type === 'REMOVE_1PIZZA') {\r\n\r\n\r\n        const newItems = {\r\n            ...state.items,\r\n           }\r\n\r\n        const currentTotalPrice = newItems[action.payload].totalPrice\r\n        const currentTotalCount = newItems[action.payload].items.length\r\n        console.log('---',  currentTotalCount)\r\n        delete newItems[action.payload]\r\n\r\n        return{\r\n            ...state,\r\n            items: newItems,\r\n            totalPrice: state.totalPrice - currentTotalPrice,\r\n            totalCount: state.totalCount - currentTotalCount,\r\n         }\r\n\r\n\r\n\r\n    }\r\n\r\n    if (action.type === 'ADD_PIZZA_CART') {\r\n        const currenPizzaItems = !state.items[action.payload.id] \r\n        ? [action.payload] \r\n        : [...state.items[action.payload.id].items, action.payload]\r\n\r\n        const newItems = {\r\n            ...state.items,\r\n            [action.payload.id]: {\r\n                items: currenPizzaItems,\r\n                totalPrice: getTotalPrice(currenPizzaItems)\r\n            }\r\n        }\r\n\r\n        const items = Object.values(newItems).map(obj => obj.items)\r\n        const allPizzas = [].concat.apply([], items)\r\n        const totalPrice = getTotalPrice(allPizzas)\r\n\r\n        return {\r\n            ...state,\r\n            items: newItems,\r\n            totalCount: allPizzas.length, \r\n            totalPrice: totalPrice\r\n        }\r\n    }\r\n    else if (action.type ==='CLEAR_CART'){\r\n        return {\r\n            totalCount: 0,\r\n            totalPrice: 0,\r\n            items: {}}\r\n    }\r\n    return state\r\n}\r\n\r\n\r\n\r\nexport default cart"]},"metadata":{},"sourceType":"module"}