{"ast":null,"code":"var _jsxFileName = \"C:\\\\programs\\\\react\\\\React-pizza\\\\my-app\\\\src\\\\components\\\\PizzaList\\\\PizzaList.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styles from './PizzaList.module.css';\nimport CN from 'classnames';\nimport { useSelector } from 'react-redux';\nimport './style.css';\nimport { CSSTransition } from 'react-transition-group';\nimport { useEffect, useRef } from 'react'; // import pizza3 from '../../data/img/image_3.png'\n// import pizza4 from '../../data/img/image_4.png'\n// import pizza5 from '../../data/img/image_5.png'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PizzaList = _ref => {\n  _s();\n\n  let {\n    onClickProps\n  } = _ref;\n  //Получаем данные из хранилища====================================\n  const pizzas = useSelector(state => state.pizzasReducer.items); //Данные получены!!!===================================================\n\n  const [show, setShow] = React.useState(true);\n  const [activeType, setActiveType] = React.useState(0);\n  const [sizes, setSizes] = React.useState(0);\n  const types = ['тонкое', 'традиционное'];\n  const availibleSize = [26, 30, 40];\n\n  const onSelectType = index => {\n    setActiveType(index); // onClickProps(index)\n  };\n\n  const onSelectSize = index => {\n    setSizes(index);\n  };\n\n  const buttonRef = useRef(null);\n  useEffect(() => {\n    buttonRef.current.click();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      ref: buttonRef,\n      сlick: () => setShow(!show),\n      children: \"\\u0431\\u043B\\u043E\\u043A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }, this), pizzas.map(pizzaItem => {\n      return /*#__PURE__*/_jsxDEV(CSSTransition, {\n        in: !show,\n        timeout: 500,\n        classNames: \"pizzaList_animation\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animation\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.pizza_item,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: styles.pizza_img,\n              src: pizzaItem.imageUrl,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.pizza_name,\n              children: pizzaItem.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.pizza_costs,\n              children: [\"\\u043E\\u0442 \", pizzaItem.price, \" \\u20BD\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.button__container,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.button_block1,\n                children: types.map((type, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => onSelectType(index),\n                    className: CN(styles.button1, pizzaItem.types[index] === 0 ? styles.disabled : ''),\n                    children: type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 41\n                  }, this) // <button className={CN(styles.button1, pizzaItem.types[0] === 0 ? styles.disabled : '')}>{type}</button>\n                  ;\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.button_block2,\n                children: availibleSize.map((size, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => onSelectSize(index),\n                    className: CN(styles.button2, pizzaItem.sizes[index] !== size ? styles.disabled : ''),\n                    children: [size, \" \\u0441\\u043C.\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 41\n                  }, this) // <button className={CN(styles.button1, pizzaItem.types[0] === 0 ? styles.disabled : '')}>{type}</button>\n                  ;\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.block4,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.pizza_costs\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.button_add,\n                  children: [\"+ \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 83\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 34\n                }, this), \"   \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PizzaList, \"dWL1bsEcOj6RBYVxoeUj/+6Z2J4=\", false, function () {\n  return [useSelector];\n});\n\n_c = PizzaList;\nexport default PizzaList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PizzaList\");","map":{"version":3,"sources":["C:/programs/react/React-pizza/my-app/src/components/PizzaList/PizzaList.jsx"],"names":["React","styles","CN","useSelector","CSSTransition","useEffect","useRef","PizzaList","onClickProps","pizzas","state","pizzasReducer","items","show","setShow","useState","activeType","setActiveType","sizes","setSizes","types","availibleSize","onSelectType","index","onSelectSize","buttonRef","current","click","container","map","pizzaItem","pizza_item","pizza_img","imageUrl","pizza_name","name","pizza_costs","price","button__container","button_block1","type","button1","disabled","button_block2","size","button2","block4","button_add"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport styles from './PizzaList.module.css'\r\nimport CN from 'classnames'\r\nimport { useSelector } from 'react-redux';\r\nimport './style.css'\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { useEffect, useRef } from 'react';\r\n\r\n\r\n// import pizza3 from '../../data/img/image_3.png'\r\n// import pizza4 from '../../data/img/image_4.png'\r\n// import pizza5 from '../../data/img/image_5.png'\r\n\r\nconst PizzaList = ({onClickProps}) => {\r\n    \r\n    //Получаем данные из хранилища====================================\r\n    const pizzas = useSelector((state) =>  state.pizzasReducer.items )\r\n    //Данные получены!!!===================================================\r\n\r\n    const [show, setShow] = React.useState(true)\r\n    const [activeType, setActiveType] = React.useState(0)\r\n    const [sizes, setSizes] = React.useState(0)\r\n    const types = ['тонкое', 'традиционное']\r\n    const availibleSize = [26, 30, 40]\r\n\r\n    const onSelectType = (index) => {\r\n        setActiveType(index)\r\n        // onClickProps(index)\r\n    }\r\n    const onSelectSize = (index) => {\r\n        setSizes(index)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const buttonRef = useRef(null);\r\n    useEffect(() => {\r\n        buttonRef.current.click();\r\n      }, [])\r\n    return (\r\n\r\n\r\n        <div className={styles.container}>\r\n            \r\n                    <h1  ref={buttonRef} сlick ={() => setShow(!show)}>\r\n                        блок\r\n                    </h1>\r\n            {\r\n                pizzas.map(pizzaItem => {\r\n\r\n\r\n                    return (\r\n                        \r\n                        <CSSTransition \r\n                        in={!show}\r\n                        timeout={500}\r\n                        classNames=\"pizzaList_animation\"                    \r\n                        unmountOnExit>\r\n\r\n                        <div className=\"animation\">\r\n                        <div className={styles.pizza_item}>\r\n                        <img className={styles.pizza_img} src={pizzaItem.imageUrl} alt=\"\" />\r\n                        <div className={styles.pizza_name}>{pizzaItem.name}</div>\r\n                        <div className={styles.pizza_costs}>от {pizzaItem.price} ₽</div>\r\n                        <div className={styles.button__container}>\r\n                            <div className={styles.button_block1}>\r\n                                {types.map((type, index) => {\r\n                                    return(\r\n                                        <button \r\n                                            onClick={() => onSelectType(index)}\r\n                                            className={CN(\r\n                                                styles.button1, \r\n                                                pizzaItem.types[index] === 0 ? styles.disabled : ''\r\n                                                )}\r\n                                        >{type}</button>\r\n                                        // <button className={CN(styles.button1, pizzaItem.types[0] === 0 ? styles.disabled : '')}>{type}</button>\r\n                                    )\r\n                                }\r\n                                )}\r\n                               \r\n                            </div>\r\n                            <div className={styles.button_block2}>\r\n                            {availibleSize.map((size, index) => {\r\n                                    return(\r\n                                        <button \r\n                                            onClick={() =>  onSelectSize(index) }\r\n                                            className={CN(\r\n                                                styles.button2, \r\n                                                pizzaItem.sizes[index] !== size ? styles.disabled : ''\r\n                                                )}\r\n                                        >{size} см.</button>\r\n                                        // <button className={CN(styles.button1, pizzaItem.types[0] === 0 ? styles.disabled : '')}>{type}</button>\r\n                                    )\r\n                                }\r\n                                )}\r\n\r\n\r\n\r\n\r\n                                {/* <button className={styles.button2}>26 см.</button>\r\n                                <button className={CN(styles.button2, styles.disabled)}>30 см.</button>\r\n                                <button className={styles.button2}>40 см.</button> */}\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.block4}>\r\n                            <div className={styles.pizza_costs}></div>\r\n                            <div><button className={styles.button_add}>+ Добавить <span>2</span></button>   </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        </CSSTransition>\r\n                        )\r\n                })\r\n\r\n            }\r\n\r\n                                    {/* {pizzas.types.map(pizzaType => {\r\n                                        return (\r\n                                            <div className={styles.button_block1}>\r\n                                                <button className={styles.button1}>{pizzaType}</button>\r\n                                            </div>\r\n                                        )\r\n                                    }) */}\r\n\r\n\r\n\r\n\r\n            \r\n           \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PizzaList;"]},"metadata":{},"sourceType":"module"}