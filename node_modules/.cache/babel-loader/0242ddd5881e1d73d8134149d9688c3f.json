{"ast":null,"code":"const initialState = {\n  items: {},\n  totalPrice: 0,\n  totalCount: 0\n};\n\nconst getTotalPrice = arr => arr.reduce((sum, obj) => obj.price + sum, 0);\n\nconst cart = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'REMOVE_1PIZZA') {\n    const newItems = { ...state.items\n    };\n    const currentTotalPrice = newItems[action.payload];\n    delete newItems[action.payload];\n    return { ...state,\n      items: newItems\n    };\n  }\n\n  if (action.type === 'ADD_PIZZA_CART') {\n    const currenPizzaItems = !state.items[action.payload.id] ? [action.payload] : [...state.items[action.payload.id].items, action.payload];\n    const newItems = { ...state.items,\n      [action.payload.id]: {\n        items: currenPizzaItems,\n        totalPrice: getTotalPrice(currenPizzaItems)\n      }\n    };\n    const items = Object.values(newItems).map(obj => obj.items);\n    const allPizzas = [].concat.apply([], items);\n    const totalPrice = getTotalPrice(allPizzas);\n    return { ...state,\n      items: newItems,\n      totalCount: allPizzas.length,\n      totalPrice: totalPrice\n    };\n  } else if (action.type === 'CLEAR_CART') {\n    return {\n      totalCount: 0,\n      totalPrice: 0,\n      items: {}\n    };\n  }\n\n  return state;\n};\n\nexport default cart;","map":{"version":3,"sources":["C:/programs/react/React-pizza/my-app/src/redux/reducers/cart.js"],"names":["initialState","items","totalPrice","totalCount","getTotalPrice","arr","reduce","sum","obj","price","cart","state","action","type","newItems","currentTotalPrice","payload","currenPizzaItems","id","Object","values","map","allPizzas","concat","apply","length"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,UAAU,EAAE,CAFK;AAGjBC,EAAAA,UAAU,EAAE;AAHK,CAArB;;AAMA,MAAMC,aAAa,GAAGC,GAAG,IAAIA,GAAG,CAACC,MAAJ,CAAW,CAACC,GAAD,EAAMC,GAAN,KAAcA,GAAG,CAACC,KAAJ,GAAYF,GAArC,EAA0C,CAA1C,CAA7B;;AAEC,MAAMG,IAAI,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBX,YAAyB;AAAA,MAAXY,MAAW;;AAC5C,MAAIA,MAAM,CAACC,IAAP,KAAgB,eAApB,EAAqC;AAGjC,UAAMC,QAAQ,GAAG,EACb,GAAGH,KAAK,CAACV;AADI,KAAjB;AAIA,UAAMc,iBAAiB,GAAGD,QAAQ,CAACF,MAAM,CAACI,OAAR,CAAlC;AAEA,WAAOF,QAAQ,CAACF,MAAM,CAACI,OAAR,CAAf;AACA,WAAM,EACF,GAAGL,KADD;AAEFV,MAAAA,KAAK,EAAEa;AAFL,KAAN;AAQH;;AAED,MAAIF,MAAM,CAACC,IAAP,KAAgB,gBAApB,EAAsC;AAClC,UAAMI,gBAAgB,GAAG,CAACN,KAAK,CAACV,KAAN,CAAYW,MAAM,CAACI,OAAP,CAAeE,EAA3B,CAAD,GACvB,CAACN,MAAM,CAACI,OAAR,CADuB,GAEvB,CAAC,GAAGL,KAAK,CAACV,KAAN,CAAYW,MAAM,CAACI,OAAP,CAAeE,EAA3B,EAA+BjB,KAAnC,EAA0CW,MAAM,CAACI,OAAjD,CAFF;AAIA,UAAMF,QAAQ,GAAG,EACb,GAAGH,KAAK,CAACV,KADI;AAEb,OAACW,MAAM,CAACI,OAAP,CAAeE,EAAhB,GAAqB;AACjBjB,QAAAA,KAAK,EAAEgB,gBADU;AAEjBf,QAAAA,UAAU,EAAEE,aAAa,CAACa,gBAAD;AAFR;AAFR,KAAjB;AAQA,UAAMhB,KAAK,GAAGkB,MAAM,CAACC,MAAP,CAAcN,QAAd,EAAwBO,GAAxB,CAA4Bb,GAAG,IAAIA,GAAG,CAACP,KAAvC,CAAd;AACA,UAAMqB,SAAS,GAAG,GAAGC,MAAH,CAAUC,KAAV,CAAgB,EAAhB,EAAoBvB,KAApB,CAAlB;AACA,UAAMC,UAAU,GAAGE,aAAa,CAACkB,SAAD,CAAhC;AAEA,WAAO,EACH,GAAGX,KADA;AAEHV,MAAAA,KAAK,EAAEa,QAFJ;AAGHX,MAAAA,UAAU,EAAEmB,SAAS,CAACG,MAHnB;AAIHvB,MAAAA,UAAU,EAAEA;AAJT,KAAP;AAMH,GAvBD,MAwBK,IAAIU,MAAM,CAACC,IAAP,KAAe,YAAnB,EAAgC;AACjC,WAAO;AACHV,MAAAA,UAAU,EAAE,CADT;AAEHD,MAAAA,UAAU,EAAE,CAFT;AAGHD,MAAAA,KAAK,EAAE;AAHJ,KAAP;AAIH;;AACD,SAAOU,KAAP;AACH,CApDA;;AAwDD,eAAeD,IAAf","sourcesContent":["const initialState = {\r\n    items: {},\r\n    totalPrice: 0,\r\n    totalCount: 0\r\n}\r\n\r\nconst getTotalPrice = arr => arr.reduce((sum, obj) => obj.price + sum, 0   )\r\n\r\n const cart = (state = initialState, action) => {\r\n    if (action.type === 'REMOVE_1PIZZA') {\r\n\r\n\r\n        const newItems = {\r\n            ...state.items\r\n        }\r\n\r\n        const currentTotalPrice = newItems[action.payload]\r\n\r\n        delete newItems[action.payload]\r\n        return{\r\n            ...state,\r\n            items: newItems\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    if (action.type === 'ADD_PIZZA_CART') {\r\n        const currenPizzaItems = !state.items[action.payload.id] \r\n        ? [action.payload] \r\n        : [...state.items[action.payload.id].items, action.payload]\r\n\r\n        const newItems = {\r\n            ...state.items,\r\n            [action.payload.id]: {\r\n                items: currenPizzaItems,\r\n                totalPrice: getTotalPrice(currenPizzaItems)\r\n            }\r\n        }\r\n\r\n        const items = Object.values(newItems).map(obj => obj.items)\r\n        const allPizzas = [].concat.apply([], items)\r\n        const totalPrice = getTotalPrice(allPizzas)\r\n\r\n        return {\r\n            ...state,\r\n            items: newItems,\r\n            totalCount: allPizzas.length, \r\n            totalPrice: totalPrice\r\n        }\r\n    }\r\n    else if (action.type ==='CLEAR_CART'){\r\n        return {\r\n            totalCount: 0,\r\n            totalPrice: 0,\r\n            items: {}}\r\n    }\r\n    return state\r\n}\r\n\r\n\r\n\r\nexport default cart"]},"metadata":{},"sourceType":"module"}